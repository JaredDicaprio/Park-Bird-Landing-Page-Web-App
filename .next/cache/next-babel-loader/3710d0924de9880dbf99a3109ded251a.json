{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Will\\\\Desktop\\\\Web Projects\\\\Park-Bird-Landing-Page-Web-App\\\\src\\\\components\\\\Core\\\\Select.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { withTheme } from \"styled-components\";\nimport Select from \"react-select\";\nconst defaultOptions = [{\n  value: \"chocolate\",\n  label: \"Chocolate\"\n}, {\n  value: \"strawberry\",\n  label: \"Strawberry\"\n}, {\n  value: \"vanilla\",\n  label: \"Vanilla\"\n}];\n\nconst getCustomStyles = theme => {\n  return {\n    option: (provided, state) => _objectSpread(_objectSpread({}, provided), {}, {\n      color: state.isSelected ? theme.colors.secondary : theme.colors.dark,\n      backgroundColor: theme.colors.white\n    }),\n    control: (provided, state) => {\n      return _objectSpread(_objectSpread({}, provided), {}, {\n        border: state.menuIsOpen || state.isFocused ? `1px solid ${theme.colors.secondary} !important` : `1px solid ${theme.colors.border} !important`,\n        borderRadius: 10,\n        padding: \"1.275rem 1rem\",\n        outline: \"none\",\n        boxShadow: \"none\"\n      });\n    }\n  };\n};\n\nconst SelectStyled = (_ref) => {\n  let {\n    theme,\n    name = \"item\",\n    options = defaultOptions\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"theme\", \"name\", \"options\"]);\n\n  return __jsx(Select, _extends({\n    styles: getCustomStyles(theme),\n    defaultValue: options[1],\n    name: name,\n    options: options\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default withTheme(SelectStyled);","map":{"version":3,"sources":["C:/Users/Will/Desktop/Web Projects/Park-Bird-Landing-Page-Web-App/src/components/Core/Select.js"],"names":["React","withTheme","Select","defaultOptions","value","label","getCustomStyles","theme","option","provided","state","color","isSelected","colors","secondary","dark","backgroundColor","white","control","border","menuIsOpen","isFocused","borderRadius","padding","outline","boxShadow","SelectStyled","name","options","rest"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,MAAMC,cAAc,GAAG,CACrB;AAAEC,EAAAA,KAAK,EAAE,WAAT;AAAsBC,EAAAA,KAAK,EAAE;AAA7B,CADqB,EAErB;AAAED,EAAAA,KAAK,EAAE,YAAT;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CAFqB,EAGrB;AAAED,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CAHqB,CAAvB;;AAMA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,MAAM,EAAE,CAACC,QAAD,EAAWC,KAAX,qCACHD,QADG;AAENE,MAAAA,KAAK,EAAED,KAAK,CAACE,UAAN,GAAmBL,KAAK,CAACM,MAAN,CAAaC,SAAhC,GAA4CP,KAAK,CAACM,MAAN,CAAaE,IAF1D;AAGNC,MAAAA,eAAe,EAAET,KAAK,CAACM,MAAN,CAAaI;AAHxB,MADH;AAMLC,IAAAA,OAAO,EAAE,CAACT,QAAD,EAAWC,KAAX,KAAqB;AAC5B,6CACKD,QADL;AAEEU,QAAAA,MAAM,EAAET,KAAK,CAACU,UAAN,IAAoBV,KAAK,CAACW,SAA1B,GACH,aAAYd,KAAK,CAACM,MAAN,CAAaC,SAAU,aADhC,GAEH,aAAYP,KAAK,CAACM,MAAN,CAAaM,MAAO,aAJvC;AAKEG,QAAAA,YAAY,EAAE,EALhB;AAMEC,QAAAA,OAAO,EAAE,eANX;AAOEC,QAAAA,OAAO,EAAE,MAPX;AAQEC,QAAAA,SAAS,EAAE;AARb;AAUD;AAjBI,GAAP;AAmBD,CApBD;;AAsBA,MAAMC,YAAY,GAAG,UAKf;AAAA,MALgB;AACpBnB,IAAAA,KADoB;AAEpBoB,IAAAA,IAAI,GAAG,MAFa;AAGpBC,IAAAA,OAAO,GAAGzB;AAHU,GAKhB;AAAA,MADD0B,IACC;;AACJ,SACE,MAAC,MAAD;AACE,IAAA,MAAM,EAAEvB,eAAe,CAACC,KAAD,CADzB;AAEE,IAAA,YAAY,EAAEqB,OAAO,CAAC,CAAD,CAFvB;AAGE,IAAA,IAAI,EAAED,IAHR;AAIE,IAAA,OAAO,EAAEC;AAJX,KAKMC,IALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AASD,CAfD;;AAiBA,eAAe5B,SAAS,CAACyB,YAAD,CAAxB","sourcesContent":["import React from \"react\";\nimport { withTheme } from \"styled-components\";\n\nimport Select from \"react-select\";\n\nconst defaultOptions = [\n  { value: \"chocolate\", label: \"Chocolate\" },\n  { value: \"strawberry\", label: \"Strawberry\" },\n  { value: \"vanilla\", label: \"Vanilla\" },\n];\n\nconst getCustomStyles = (theme) => {\n  return {\n    option: (provided, state) => ({\n      ...provided,\n      color: state.isSelected ? theme.colors.secondary : theme.colors.dark,\n      backgroundColor: theme.colors.white,\n    }),\n    control: (provided, state) => {\n      return {\n        ...provided,\n        border: state.menuIsOpen || state.isFocused \n          ? `1px solid ${theme.colors.secondary} !important`\n          : `1px solid ${theme.colors.border} !important`,\n        borderRadius: 10,\n        padding: \"1.275rem 1rem\",\n        outline: \"none\",\n        boxShadow: \"none\",\n      };\n    },\n  };\n};\n\nconst SelectStyled = ({\n  theme,\n  name = \"item\",\n  options = defaultOptions,\n  ...rest\n}) => {\n  return (\n    <Select\n      styles={getCustomStyles(theme)}\n      defaultValue={options[1]}\n      name={name}\n      options={options}\n      {...rest}\n    />\n  );\n};\n\nexport default withTheme(SelectStyled);\n"]},"metadata":{},"sourceType":"module"}