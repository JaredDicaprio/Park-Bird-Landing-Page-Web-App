{"ast":null,"code":"import _styled from \"styled-components\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { Container } from \"react-bootstrap\";\nimport { useScrollPosition } from \"@n8tb1t/use-scroll-position\";\nimport Link from \"next/link\";\nimport GlobalContext from \"../../context/GlobalContext\";\nimport Offcanvas from \"../Offcanvas\";\nimport { Button } from \"../Core\";\nimport NestedMenu from \"../NestedMenu\";\nimport { device } from \"../../utils\";\nimport Logo from \"../Logo\";\nimport { menuItems } from \"./menuItems\";\nconst SiteHeader = styled.header.withConfig({\n  displayName: \"Header__SiteHeader\",\n  componentId: \"sc-1lpvowq-0\"\n})([\"padding:10px 0 10px 0;position:absolute !important;top:0;right:0;width:100%;z-index:999;@media \", \"{position:fixed !important;transition:0.4s;&.scrolling{transform:translateY(-100%);transition:0.4s;}&.reveal-header{transform:translateY(0%);box-shadow:0 12px 34px -11px rgba(65,62,101,0.1);z-index:9999;background:\", \";}}\"], device.lg, ({\n  dark,\n  theme\n}) => dark ? theme.colors.dark : theme.colors.light);\nconst ToggleButton = styled.button.withConfig({\n  displayName: \"Header__ToggleButton\",\n  componentId: \"sc-1lpvowq-1\"\n})([\"color:\", \"!important;border-color:\", \"!important;\"], ({\n  dark,\n  theme\n}) => dark ? theme.colors.lightShade : theme.colors.darkShade, ({\n  dark,\n  theme\n}) => dark ? theme.colors.lightShade : theme.colors.darkShade);\nconst Menu = styled.ul.withConfig({\n  displayName: \"Header__Menu\",\n  componentId: \"sc-1lpvowq-2\"\n})([\"@media \", \"{display:flex;justify-content:flex-end;}.dropdown-toggle{cursor:pointer;}> li{> .nav-link{@media \", \"{color:\", \"!important;font-size:16px;font-weight:500;line-height:24px;padding-top:18px !important;padding-bottom:18px !important;padding-left:18px !important;padding-right:18px !important;}&:hover{color:\", \" !important;}}}.nav-item.dropdown{@media \", \"{position:relative;z-index:99;}&:hover{> .menu-dropdown{@media \", \"{top:90%;opacity:1;pointer-events:visible;}}}}\"], device.lg, device.lg, ({\n  dark,\n  theme\n}) => dark ? theme.colors.light : theme.colors.darkShade, ({\n  theme\n}) => theme.colors.primary, device.lg, device.lg);\nconst MenuDropdown = styled.ul.withConfig({\n  displayName: \"Header__MenuDropdown\",\n  componentId: \"sc-1lpvowq-3\"\n})([\"list-style:none;@media \", \"{top:110%;position:absolute;min-width:227px;max-width:227px;box-shadow:0 52px 54px rgba(65,62,101,0.3);border-radius:8px;border:1px solid #e5e5e5;background-color:#ffffff;padding:15px 0px;z-index:99;opacity:0;transition:opacity 0.4s,top 0.4s;pointer-events:none;left:-90%;border-radius:0 0 10px 10px;border:1px solid #eae9f2;background-color:#ffffff;display:block;border-top:\", \";}> .drop-menu-item{color:\", \";font-size:16px;font-weight:300;letter-spacing:-0.5px;padding-left:30px;padding-right:30px;padding-top:10px;padding-bottom:10px;a{color:\", \";transition:all 0.3s ease-out;position:relative;display:flex;align-items:center;&.dropdown-toggle::after{display:inline-block;vertical-align:0.255em;content:\\\"\\\";border-top:0.325em solid;border-right:0.325em solid transparent;border-bottom:0;border-left:0.325em solid transparent;position:relative;top:1px;margin-left:auto;transform:rotate(-90deg);transition:0.4s;}}&:hover{> a{color:\", \";text-decoration:none;&::after{transform:rotate(0deg);}}}&.dropdown{position:relative;&:hover{> .menu-dropdown{@media \", \"{top:10px;opacity:1;pointer-events:visible;transform:translateX(-100%);}}}> .menu-dropdown{border-top-color:\", \";@media \", \"{top:10px;left:0%;opacity:0;transform:translateX(-110%);transition:0.4s;pointer-events:none;}> .drop-menu-item{@media \", \"{padding-left:30px;padding-right:30px;}}}}}&.dropdown-right{left:auto;right:-90%;}\"], device.lg, ({\n  theme\n}) => `3px solid ${theme.colors.secondary}`, ({\n  theme\n}) => theme.colors.dark, ({\n  theme\n}) => theme.colors.dark, ({\n  theme\n}) => theme.colors.secondary, device.lg, ({\n  theme\n}) => theme.colors.primary, device.lg, device.lg);\n\nvar _StyledButton = styled(Button).withConfig({\n  displayName: \"Header___StyledButton\",\n  componentId: \"sc-1lpvowq-4\"\n})([\"font-size:16px !important;min-width:141px !important;height:45px !important;\"]);\n\nconst Header = ({\n  isDark = false\n}) => {\n  const gContext = useContext(GlobalContext);\n  const {\n    0: showScrolling,\n    1: setShowScrolling\n  } = useState(false);\n  const {\n    0: showReveal,\n    1: setShowReveal\n  } = useState(false);\n  useScrollPosition(({\n    prevPos,\n    currPos\n  }) => {\n    if (currPos.y < 0) {\n      setShowScrolling(true);\n    } else {\n      setShowScrolling(false);\n    }\n\n    if (currPos.y < -300) {\n      setShowReveal(true);\n    } else {\n      setShowReveal(false);\n    }\n  });\n  return __jsx(React.Fragment, null, __jsx(SiteHeader, {\n    className: `sticky-header ${showScrolling ? \"scrolling\" : \"\"} ${showReveal ? \"reveal-header\" : \"\"}`,\n    dark: isDark ? 1 : 0\n  }, __jsx(Container, {\n    fluid: true\n  }, __jsx(\"nav\", {\n    className: \"navbar site-navbar offcanvas-active navbar-expand-lg navbar-light\"\n  }, __jsx(\"div\", {\n    className: \"brand-logo\"\n  }, __jsx(Logo, {\n    white: isDark\n  })), __jsx(\"div\", {\n    className: \"collapse navbar-collapse\"\n  }, __jsx(\"div\", {\n    className: \"navbar-nav ml-lg-auto mr-3\"\n  }, __jsx(Menu, {\n    className: \"navbar-nav d-none d-lg-flex\",\n    dark: isDark ? 1 : 0\n  }, menuItems.map((_ref, index) => {\n    let {\n      label,\n      isExternal = false,\n      name,\n      items\n    } = _ref,\n        rest = _objectWithoutProperties(_ref, [\"label\", \"isExternal\", \"name\", \"items\"]);\n\n    const hasSubItems = Array.isArray(items);\n    return __jsx(React.Fragment, {\n      key: name + index\n    }, hasSubItems ? __jsx(\"li\", _extends({\n      className: \"nav-item dropdown\"\n    }, rest), __jsx(\"a\", {\n      className: \"nav-link dropdown-toggle\",\n      role: \"button\",\n      \"data-toggle\": \"dropdown\",\n      \"aria-expanded\": \"false\",\n      href: \"/#\",\n      onClick: e => e.preventDefault()\n    }, label), __jsx(MenuDropdown, {\n      className: \"menu-dropdown dropdown-right\",\n      dark: isDark ? 1 : 0\n    }, items.map((subItem, indexSub) => {\n      const hasInnerSubItems = Array.isArray(subItem.items);\n      return __jsx(React.Fragment, {\n        key: subItem.name + indexSub\n      }, hasInnerSubItems ? __jsx(\"li\", {\n        className: \"drop-menu-item dropdown\"\n      }, __jsx(\"a\", {\n        className: \"dropdown-toggle\",\n        role: \"button\",\n        \"data-toggle\": \"dropdown\",\n        \"aria-expanded\": \"false\",\n        href: \"/#\",\n        onClick: e => e.preventDefault()\n      }, subItem.label), __jsx(MenuDropdown, {\n        className: \"menu-dropdown dropdown-right\",\n        dark: isDark ? 1 : 0\n      }, subItem.items.map((itemInner, indexInnerMost) => __jsx(\"li\", {\n        className: \"drop-menu-item\",\n        key: itemInner.name + indexInnerMost\n      }, itemInner.isExternal ? __jsx(\"a\", {\n        href: `${itemInner.name}`,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\"\n      }, itemInner.label) : __jsx(Link, {\n        href: `/${itemInner.name}`\n      }, __jsx(\"a\", null, itemInner.label)))))) : __jsx(\"li\", {\n        className: \"drop-menu-item\"\n      }, subItem.isExternal ? __jsx(\"a\", {\n        href: `${subItem.name}`,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\"\n      }, subItem.label) : __jsx(Link, {\n        href: `/${subItem.name}`\n      }, __jsx(\"a\", null, subItem.label))));\n    }))) : __jsx(\"li\", _extends({\n      className: \"nav-item\"\n    }, rest), isExternal ? __jsx(\"a\", {\n      className: \"nav-link\",\n      href: `${name}`,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }, label) : __jsx(Link, {\n      href: `/${name}`\n    }, __jsx(\"a\", {\n      className: \"nav-link\",\n      role: \"button\",\n      \"aria-expanded\": \"false\"\n    }, label))));\n  })))), __jsx(\"div\", {\n    className: \"header-btns ml-auto ml-lg-0 d-none d-md-block\"\n  }, __jsx(_StyledButton, {\n    size: \"sm\"\n  }, \"Get Started\")), __jsx(ToggleButton, {\n    className: `navbar-toggler btn-close-off-canvas ml-3 ${gContext.visibleOffCanvas ? \"collapsed\" : \"\"}`,\n    type: \"button\",\n    \"data-toggle\": \"collapse\",\n    \"data-target\": \"#mobile-menu\",\n    \"aria-controls\": \"mobile-menu\",\n    \"aria-expanded\": \"false\",\n    \"aria-label\": \"Toggle navigation\",\n    onClick: gContext.toggleOffCanvas,\n    dark: isDark ? 1 : 0\n  }, __jsx(\"i\", {\n    className: \"icon icon-menu-34 icon-burger d-block\"\n  }))))), __jsx(Offcanvas, {\n    show: gContext.visibleOffCanvas,\n    onHideOffcanvas: gContext.toggleOffCanvas\n  }, __jsx(NestedMenu, {\n    menuItems: menuItems\n  })));\n};\n\nexport default Header;","map":null,"metadata":{},"sourceType":"module"}