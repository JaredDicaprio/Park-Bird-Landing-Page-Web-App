{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Will\\\\Desktop\\\\Web Projects\\\\Park-Bird-Landing-Page-Web-App\\\\src\\\\components\\\\Core\\\\Button.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { color, background, space, border, typography, shadow, flexbox, layout } from \"styled-system\";\nconst ButtonSolid = styled.button.withConfig({\n  displayName: \"Button__ButtonSolid\",\n  componentId: \"l325es-0\"\n})([\"padding:0.85rem 1.75rem;min-width:200px;border-radius:5px;font-size:21px;font-weight:500;letter-spacing:-0.66px;display:inline-flex;align-items:center;justify-content:center;transform:perspective(1px) translateZ(0);position:relative;overflow:hidden;outline:none !important;white-space:nowrap;\", \";\", \";\", \";\", \";\", \";\", \";\", \";\", \";&:before{content:\\\"\\\";position:absolute;z-index:-1;top:0;left:0;right:0;bottom:0;background:rgba(255,255,255,0.1);transform:scaleX(0);transform-origin:100% 50%;transition-property:transform;transition-duration:0.5s;transition-timing-function:ease-out;}&:hover:before,&:focus:before,&:active:before{transform:scaleX(1);transition-timing-function:cubic-bezier(0.52,1.64,0.37,0.66);}\"], color, background, border, space, typography, shadow, flexbox, layout);\nconst ButtonOutline = styled(ButtonSolid).withConfig({\n  displayName: \"Button__ButtonOutline\",\n  componentId: \"l325es-1\"\n})([\"background:transparent;&:before{background:\", \";}&:hover,&:focus,&:active{color:\", \";}&:hover:before,&:focus:before,&:active:before{transform:scaleX(1);transition-timing-function:cubic-bezier(0.52,1.64,0.37,0.66);background:\", \";}\"], ({\n  theme,\n  color\n}) => theme.colors[color], ({\n  theme\n}) => theme.colors.dark, ({\n  theme,\n  color\n}) => theme.colors[color]);\n\nconst Button = (_ref) => {\n  let {\n    variant = \"solid\",\n    color = \"light\",\n    bg = \"primary\"\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"variant\", \"color\", \"bg\"]);\n\n  return variant === \"solid\" ? __jsx(ButtonSolid, _extends({\n    color: color,\n    border: `1px solid`,\n    borderColor: bg,\n    bg: bg\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  })) : __jsx(ButtonOutline, _extends({\n    color: color,\n    bg: bg,\n    border: `1px solid`,\n    borderColor: color\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default Button;","map":{"version":3,"sources":["C:/Users/Will/Desktop/Web Projects/Park-Bird-Landing-Page-Web-App/src/components/Core/Button.js"],"names":["React","styled","color","background","space","border","typography","shadow","flexbox","layout","ButtonSolid","button","ButtonOutline","theme","colors","dark","Button","variant","bg","rest"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SACEC,KADF,EAEEC,UAFF,EAGEC,KAHF,EAIEC,MAJF,EAKEC,UALF,EAMEC,MANF,EAOEC,OAPF,EAQEC,MARF,QASO,eATP;AAWA,MAAMC,WAAW,GAAGT,MAAM,CAACU,MAAV;AAAA;AAAA;AAAA,itBAebT,KAfa,EAgBbC,UAhBa,EAiBbE,MAjBa,EAkBbD,KAlBa,EAmBbE,UAnBa,EAoBbC,MApBa,EAqBbC,OArBa,EAsBbC,MAtBa,CAAjB;AAgDA,MAAMG,aAAa,GAAGX,MAAM,CAACS,WAAD,CAAT;AAAA;AAAA;AAAA,+OAMD,CAAC;AAAEG,EAAAA,KAAF;AAASX,EAAAA;AAAT,CAAD,KAAsBW,KAAK,CAACC,MAAN,CAAaZ,KAAb,CANrB,EAYN,CAAC;AAAEW,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,IAZtB,EAmBD,CAAC;AAAEF,EAAAA,KAAF;AAASX,EAAAA;AAAT,CAAD,KAAsBW,KAAK,CAACC,MAAN,CAAaZ,KAAb,CAnBrB,CAAnB;;AAuBA,MAAMc,MAAM,GAAG,UAKT;AAAA,MALU;AACdC,IAAAA,OAAO,GAAG,OADI;AAEdf,IAAAA,KAAK,GAAG,OAFM;AAGdgB,IAAAA,EAAE,GAAG;AAHS,GAKV;AAAA,MADDC,IACC;;AACJ,SAAOF,OAAO,KAAK,OAAZ,GACL,MAAC,WAAD;AACE,IAAA,KAAK,EAAEf,KADT;AAEE,IAAA,MAAM,EAAG,WAFX;AAGE,IAAA,WAAW,EAAEgB,EAHf;AAIE,IAAA,EAAE,EAAEA;AAJN,KAKMC,IALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADK,GASL,MAAC,aAAD;AACE,IAAA,KAAK,EAAEjB,KADT;AAEE,IAAA,EAAE,EAAEgB,EAFN;AAGE,IAAA,MAAM,EAAG,WAHX;AAIE,IAAA,WAAW,EAAEhB;AAJf,KAKMiB,IALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KATF;AAiBD,CAvBD;;AAyBA,eAAeH,MAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport {\n  color,\n  background,\n  space,\n  border,\n  typography,\n  shadow,\n  flexbox,\n  layout,\n} from \"styled-system\";\n\nconst ButtonSolid = styled.button`\n  padding: 0.85rem 1.75rem;\n  min-width: 200px;\n  border-radius: 5px;\n  font-size: 21px;\n  font-weight: 500;\n  letter-spacing: -0.66px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  transform: perspective(1px) translateZ(0);\n  position: relative;\n  overflow: hidden;\n  outline: none !important;\n  white-space: nowrap;\n  ${color};\n  ${background};\n  ${border};\n  ${space};\n  ${typography};\n  ${shadow};\n  ${flexbox};\n  ${layout};\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    z-index: -1;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(255, 255, 255, 0.1);\n    transform: scaleX(0);\n    transform-origin: 100% 50%;\n    transition-property: transform;\n    transition-duration: 0.5s;\n    transition-timing-function: ease-out;\n  }\n\n  &:hover:before,\n  &:focus:before,\n  &:active:before {\n    transform: scaleX(1);\n    transition-timing-function: cubic-bezier(0.52, 1.64, 0.37, 0.66);\n  }\n`;\n\nconst ButtonOutline = styled(ButtonSolid)`\n  background: transparent;\n  /* border: 1px solid ${({ theme, color }) => theme.colors[color]}; */\n  /* color: ${({ theme, color }) => theme.colors[color]}; */\n\n  &:before {\n    background: ${({ theme, color }) => theme.colors[color]};\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: ${({ theme }) => theme.colors.dark};\n  }\n  &:hover:before,\n  &:focus:before,\n  &:active:before {\n    transform: scaleX(1);\n    transition-timing-function: cubic-bezier(0.52, 1.64, 0.37, 0.66);\n    background: ${({ theme, color }) => theme.colors[color]};\n  }\n`;\n\nconst Button = ({\n  variant = \"solid\",\n  color = \"light\",\n  bg = \"primary\",\n  ...rest\n}) => {\n  return variant === \"solid\" ? (\n    <ButtonSolid\n      color={color}\n      border={`1px solid`}\n      borderColor={bg}\n      bg={bg}\n      {...rest}\n    />\n  ) : (\n    <ButtonOutline\n      color={color}\n      bg={bg}\n      border={`1px solid`}\n      borderColor={color}\n      {...rest}\n    />\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}